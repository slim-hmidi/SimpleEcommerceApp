{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple ecommerce application which contains some Restful APIs",
    "version": "1.0.0",
    "title": "Swagger Ecommerce"
  },
  "tags": [
    {
      "name": "users",
      "description": "Users' management "
    },
    {
      "name": "products",
      "description": "Prodcuts' management "
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/products/": {
      "get": {
        "tags": [
          "prodcuts"
        ],
        "description": "Returns a list of products",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "201": {
            "description": "Products found successfully!",
            "schema": {
              "$ref": "#/definitions/CreatedProduct"
            }
          },
          "400": {
            "description": "A product already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "prodcuts"
        ],
        "description": "Create a new product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created product object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products created successfully!",
            "schema": {
              "$ref": "#/definitions/CreatedProduct"
            }
          },
          "400": {
            "description": "Unable to create the product"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/products/:id": {
      "get": {
        "tags": [
          "prodcuts"
        ],
        "description": "Return a given product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Product found successfully!",
            "schema": {
              "$ref": "#/definitions/CreatedProduct"
            }
          },
          "400": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "prodcuts"
        ],
        "description": "Update a given product by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully!",
            "schema": {
              "$ref": "#/definitions/CreatedProduct"
            }
          },
          "400": {
            "description": "Unable to update the product"
          },
          "404": {
            "description": "Product to update is not found!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "prodcuts"
        ],
        "description": "Delete a given product by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully!",
            "schema": {
              "$ref": "#/definitions/DeletedProduct"
            }
          },
          "400": {
            "description": "Unable to delete the product"
          },
          "404": {
            "description": "Product to delete is not found!"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/create": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Create a new user in the app",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully!",
            "schema": {
              "$ref": "#/definitions/CreatedUser"
            }
          },
          "400": {
            "description": "User already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/authenticate": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Authenticate a user on the app",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User's credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully!",
            "schema": {
              "$ref": "#/definitions/AuthenticatedUser"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "login",
        "password"
      ],
      "properties": {
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "CreatedUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "login": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "required": [
        "name",
        "price",
        "quantity"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "CreatedProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "quantity": {
          "type": "integer"
        }
      }
    },
    "DeletedProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "ProductList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CreatedProduct"
      }
    },
    "AuthenticatedUser": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    }
  }
}